using System.Collections; using System.Collections.Generic; using UnityEngine;   public class TackGybeController : MonoBehaviour {     AudioSource audio1_ReadyAbout, audio2_LeeOh;     GameObject boat;     public static int point;     Transform movement;      public TackGybeController(int waypoint)     {         point = waypoint;      }      // Use this for initialization     void Start()     {         audio1_ReadyAbout = GameObject.Find("Canvas/TackButtons/Button2").GetComponent<AudioSource>();         audio2_LeeOh = GameObject.Find("Canvas/TackButtons/Button3").GetComponent<AudioSource>();         boat = GameObject.Find("Boat");         movement = boat.GetComponent<Transform>();      }      public void CloseButton()     {         var closeButton = GameObject.Find("Canvas/Panel");         closeButton.SetActive(false);     }      public void Next1Button()     {         //hide tack text and tack title         var tackTitle = GameObject.Find("Canvas/Panel/TackTitle");         tackTitle.SetActive(false);         var TackText = GameObject.Find("Canvas/Panel/TackText");         TackText.SetActive(false);         var button = GameObject.Find("Canvas/Panel/Next1");         button.SetActive(false);          //show POS text and title          var POSTitle = GameObject.Find("Canvas/Panel/POSTitle");         POSTitle.SetActive(true);         var POSText = GameObject.Find("Canvas/Panel/POSText");         POSText.SetActive(true);         var nextbutton = GameObject.Find("Canvas/Panel/Next2");         nextbutton.SetActive(true);     }      public void Next2Button()     {         //hide POS text and title          var POSTitle = GameObject.Find("Canvas/Panel/POSTitle");         POSTitle.SetActive(false);         var POSText = GameObject.Find("Canvas/Panel/POSText");         POSText.SetActive(false);         var nextbutton = GameObject.Find("Canvas/Panel/Next2");         nextbutton.SetActive(false);          //show practise text          var practiseTitle = GameObject.Find("Canvas/Panel/PractiseTackTitle");         practiseTitle.SetActive(true);         var practiseText = GameObject.Find("Canvas/Panel/PractiseText");         practiseText.SetActive(true);         var nextbutton3 = GameObject.Find("Canvas/Panel/Next3");         nextbutton3.SetActive(true);     }      public void CallReadyAbout()     {         if (audio2_LeeOh.isPlaying)         {             audio2_LeeOh.Stop();         }         audio1_ReadyAbout.Play();     }      public void CallLeeOh()     {         if (audio1_ReadyAbout.isPlaying)         {             audio1_ReadyAbout.Stop();         }         audio2_LeeOh.Play();     }      public void PanCameraView()     {         var pancamera = GameObject.Find("PanCamera/camera");         Camera cameraView = pancamera.GetComponent<Camera>();         cameraView.enabled = true;          Animator anim1 = cameraView.GetComponent<Animator>();         anim1.Play("TackPanCamera");      }      public void PressNo4()     {          var cameraView1 = GameObject.Find("Boat/Camera");         Camera shot = cameraView1.GetComponent<Camera>();         shot.enabled = true;          // show tiller button         var tillerButton = GameObject.Find("Canvas/TackButtons/TillerButton");         tillerButton.SetActive(true);          var msg = GameObject.Find("Canvas/Prompts/Panel");         msg.SetActive(false);      }       //attached to the button      public void MoveBoat()     {         var pancamera11 = GameObject.Find("Boat/Camera");         Camera cameraView11 = pancamera11.GetComponent<Camera>();         cameraView11.enabled = false;          //set the cameras off          var pancamera1 = GameObject.Find("PanCamera/camera");         Camera cameraView1 = pancamera1.GetComponent<Camera>();         cameraView1.enabled = false;          var tillerButton = GameObject.Find("Canvas/TackButtons/TillerButton");         tillerButton.SetActive(false);          if (point == 1)         {             movement.position = new Vector3(143.44f, -19.20f, 276.30f);             movement.transform.eulerAngles = new Vector3(0.057f, 3.86f, -0.88f);         }          else         if (point == 2)         {             movement.position = new Vector3(191.78f, -19.17f, 567.34f);             movement.transform.eulerAngles = new Vector3(3.196f,38.899f,-8.232f);         }          else         if (point == 3)         {             movement.position = new Vector3(388.11f, -19.20f, 802.69f);             movement.transform.eulerAngles = new Vector3(0.127f,6.413f,-1.472f);         }         else         {             Debug.Log("Waypoint didnt' get transferred!");         }     } }  